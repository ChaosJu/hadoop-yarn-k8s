apiVersion: v1
kind: Service
metadata:
  name: namenode
  labels:
    app: namenode
  namespace: hadoop
spec:
  clusterIP: None
  ports:
    - name: "9870"
      port: 9870
      targetPort: 9870
    - name: "9000"
      port: 9000
      targetPort: 9000
    - name: "8020"
      port: 8020
      targetPort: 8020
    - name: "9999"
      port: 9999
      targetPort: 9999
  selector:
    app: namenode
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: namenode
  namespace: hadoop
spec:
  selector:
    matchLabels:
      app: namenode
  serviceName: namenode
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: namenode
    spec:
      terminationGracePeriodSeconds: 0
      setHostnameAsFQDN: true
      initContainers:
        - name: init-volume
          imagePullPolicy: Never
          image: hadoop-namenode
          command: ['sh', '-c', 'if [ ! -f /data/hdfs/namenode/current/VERSION ]; then $HADOOP_HOME/bin/hdfs namenode -format; fi']
          volumeMounts:
            - name: namenode-data
              mountPath: "/data/hdfs"
            - name: hadoop-conf
              mountPath: "/etc/hadoop/core-site.xml"
              subPath: core-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/hdfs-site.xml"
              subPath: hdfs-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/yarn-site.xml"
              subPath: yarn-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/mapred-site.xml"
              subPath: mapred-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/hadoop-env.sh"
              subPath: hadoop-env.sh
              readOnly: true
        - name: init-namenode
          image: busybox
          command: ['sh', '-c', "until nslookup kube-dns.kube-system.svc.127-0-0-1.nip.io; do echo Waiting for namenode to come online; sleep 2; done"]
      containers:
        - imagePullPolicy: Never
          image: hadoop-namenode
          name: namenode
          volumeMounts:
            - mountPath: /data/hdfs
              name: namenode-data
            - name: hadoop-conf
              mountPath: "/etc/hadoop/core-site.xml"
              subPath: core-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/hdfs-site.xml"
              subPath: hdfs-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/yarn-site.xml"
              subPath: yarn-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/mapred-site.xml"
              subPath: mapred-site.xml
              readOnly: true
            - name: hadoop-conf
              mountPath: "/etc/hadoop/hadoop-env.sh"
              subPath: hadoop-env.sh
              readOnly: true
      volumes:
        - name: hadoop-conf
          configMap:
            name: hadoop-conf
  volumeClaimTemplates:
    - metadata:
        name: namenode-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Mi
